// Code generated by protoc-gen-go. DO NOT EDIT.
// source: src/test/proto/TestMessage.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	_struct "github.com/golang/protobuf/ptypes/struct"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Status int32

const (
	Status_COMPLETED Status = 0
	Status_CANCELLED Status = 1
)

var Status_name = map[int32]string{
	0: "COMPLETED",
	1: "CANCELLED",
}

var Status_value = map[string]int32{
	"COMPLETED": 0,
	"CANCELLED": 1,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3a001fe4bd651cd8, []int{0}
}

type TestKey struct {
	OrderNumber          string   `protobuf:"bytes,1,opt,name=order_number,json=orderNumber,proto3" json:"order_number,omitempty"`
	OrderUrl             string   `protobuf:"bytes,2,opt,name=order_url,json=orderUrl,proto3" json:"order_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestKey) Reset()         { *m = TestKey{} }
func (m *TestKey) String() string { return proto.CompactTextString(m) }
func (*TestKey) ProtoMessage()    {}
func (*TestKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a001fe4bd651cd8, []int{0}
}

func (m *TestKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestKey.Unmarshal(m, b)
}
func (m *TestKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestKey.Marshal(b, m, deterministic)
}
func (m *TestKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestKey.Merge(m, src)
}
func (m *TestKey) XXX_Size() int {
	return xxx_messageInfo_TestKey.Size(m)
}
func (m *TestKey) XXX_DiscardUnknown() {
	xxx_messageInfo_TestKey.DiscardUnknown(m)
}

var xxx_messageInfo_TestKey proto.InternalMessageInfo

func (m *TestKey) GetOrderNumber() string {
	if m != nil {
		return m.OrderNumber
	}
	return ""
}

func (m *TestKey) GetOrderUrl() string {
	if m != nil {
		return m.OrderUrl
	}
	return ""
}

type TestMessage struct {
	OrderNumber          string               `protobuf:"bytes,1,opt,name=order_number,json=orderNumber,proto3" json:"order_number,omitempty"`
	OrderUrl             string               `protobuf:"bytes,2,opt,name=order_url,json=orderUrl,proto3" json:"order_url,omitempty"`
	OrderDetails         string               `protobuf:"bytes,3,opt,name=order_details,json=orderDetails,proto3" json:"order_details,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Status               Status               `protobuf:"varint,5,opt,name=status,proto3,enum=com.gojek.beast.Status" json:"status,omitempty"`
	Discount             int64                `protobuf:"varint,6,opt,name=discount,proto3" json:"discount,omitempty"`
	Success              bool                 `protobuf:"varint,7,opt,name=success,proto3" json:"success,omitempty"`
	Price                float32              `protobuf:"fixed32,8,opt,name=price,proto3" json:"price,omitempty"`
	CurrentState         map[string]string    `protobuf:"bytes,9,rep,name=current_state,json=currentState,proto3" json:"current_state,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	UserToken            []byte               `protobuf:"bytes,10,opt,name=user_token,json=userToken,proto3" json:"user_token,omitempty"`
	TripDuration         *duration.Duration   `protobuf:"bytes,11,opt,name=trip_duration,json=tripDuration,proto3" json:"trip_duration,omitempty"`
	Aliases              []string             `protobuf:"bytes,12,rep,name=aliases,proto3" json:"aliases,omitempty"`
	Properties           *_struct.Struct      `protobuf:"bytes,13,opt,name=properties,proto3" json:"properties,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TestMessage) Reset()         { *m = TestMessage{} }
func (m *TestMessage) String() string { return proto.CompactTextString(m) }
func (*TestMessage) ProtoMessage()    {}
func (*TestMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a001fe4bd651cd8, []int{1}
}

func (m *TestMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestMessage.Unmarshal(m, b)
}
func (m *TestMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestMessage.Marshal(b, m, deterministic)
}
func (m *TestMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestMessage.Merge(m, src)
}
func (m *TestMessage) XXX_Size() int {
	return xxx_messageInfo_TestMessage.Size(m)
}
func (m *TestMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TestMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TestMessage proto.InternalMessageInfo

func (m *TestMessage) GetOrderNumber() string {
	if m != nil {
		return m.OrderNumber
	}
	return ""
}

func (m *TestMessage) GetOrderUrl() string {
	if m != nil {
		return m.OrderUrl
	}
	return ""
}

func (m *TestMessage) GetOrderDetails() string {
	if m != nil {
		return m.OrderDetails
	}
	return ""
}

func (m *TestMessage) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *TestMessage) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_COMPLETED
}

func (m *TestMessage) GetDiscount() int64 {
	if m != nil {
		return m.Discount
	}
	return 0
}

func (m *TestMessage) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *TestMessage) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *TestMessage) GetCurrentState() map[string]string {
	if m != nil {
		return m.CurrentState
	}
	return nil
}

func (m *TestMessage) GetUserToken() []byte {
	if m != nil {
		return m.UserToken
	}
	return nil
}

func (m *TestMessage) GetTripDuration() *duration.Duration {
	if m != nil {
		return m.TripDuration
	}
	return nil
}

func (m *TestMessage) GetAliases() []string {
	if m != nil {
		return m.Aliases
	}
	return nil
}

func (m *TestMessage) GetProperties() *_struct.Struct {
	if m != nil {
		return m.Properties
	}
	return nil
}

type TestNestedMessage struct {
	NestedId             string       `protobuf:"bytes,1,opt,name=nested_id,json=nestedId,proto3" json:"nested_id,omitempty"`
	SingleMessage        *TestMessage `protobuf:"bytes,2,opt,name=single_message,json=singleMessage,proto3" json:"single_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TestNestedMessage) Reset()         { *m = TestNestedMessage{} }
func (m *TestNestedMessage) String() string { return proto.CompactTextString(m) }
func (*TestNestedMessage) ProtoMessage()    {}
func (*TestNestedMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a001fe4bd651cd8, []int{2}
}

func (m *TestNestedMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestNestedMessage.Unmarshal(m, b)
}
func (m *TestNestedMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestNestedMessage.Marshal(b, m, deterministic)
}
func (m *TestNestedMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestNestedMessage.Merge(m, src)
}
func (m *TestNestedMessage) XXX_Size() int {
	return xxx_messageInfo_TestNestedMessage.Size(m)
}
func (m *TestNestedMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TestNestedMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TestNestedMessage proto.InternalMessageInfo

func (m *TestNestedMessage) GetNestedId() string {
	if m != nil {
		return m.NestedId
	}
	return ""
}

func (m *TestNestedMessage) GetSingleMessage() *TestMessage {
	if m != nil {
		return m.SingleMessage
	}
	return nil
}

type TestNestedRepeatedMessage struct {
	SingleMessage        *TestMessage   `protobuf:"bytes,1,opt,name=single_message,json=singleMessage,proto3" json:"single_message,omitempty"`
	RepeatedMessage      []*TestMessage `protobuf:"bytes,2,rep,name=repeated_message,json=repeatedMessage,proto3" json:"repeated_message,omitempty"`
	NumberField          int32          `protobuf:"varint,3,opt,name=number_field,json=numberField,proto3" json:"number_field,omitempty"`
	RepeatedNumberField  []int32        `protobuf:"varint,4,rep,packed,name=repeated_number_field,json=repeatedNumberField,proto3" json:"repeated_number_field,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TestNestedRepeatedMessage) Reset()         { *m = TestNestedRepeatedMessage{} }
func (m *TestNestedRepeatedMessage) String() string { return proto.CompactTextString(m) }
func (*TestNestedRepeatedMessage) ProtoMessage()    {}
func (*TestNestedRepeatedMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a001fe4bd651cd8, []int{3}
}

func (m *TestNestedRepeatedMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestNestedRepeatedMessage.Unmarshal(m, b)
}
func (m *TestNestedRepeatedMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestNestedRepeatedMessage.Marshal(b, m, deterministic)
}
func (m *TestNestedRepeatedMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestNestedRepeatedMessage.Merge(m, src)
}
func (m *TestNestedRepeatedMessage) XXX_Size() int {
	return xxx_messageInfo_TestNestedRepeatedMessage.Size(m)
}
func (m *TestNestedRepeatedMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TestNestedRepeatedMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TestNestedRepeatedMessage proto.InternalMessageInfo

func (m *TestNestedRepeatedMessage) GetSingleMessage() *TestMessage {
	if m != nil {
		return m.SingleMessage
	}
	return nil
}

func (m *TestNestedRepeatedMessage) GetRepeatedMessage() []*TestMessage {
	if m != nil {
		return m.RepeatedMessage
	}
	return nil
}

func (m *TestNestedRepeatedMessage) GetNumberField() int32 {
	if m != nil {
		return m.NumberField
	}
	return 0
}

func (m *TestNestedRepeatedMessage) GetRepeatedNumberField() []int32 {
	if m != nil {
		return m.RepeatedNumberField
	}
	return nil
}

func init() {
	proto.RegisterEnum("com.gojek.beast.Status", Status_name, Status_value)
	proto.RegisterType((*TestKey)(nil), "com.gojek.beast.TestKey")
	proto.RegisterType((*TestMessage)(nil), "com.gojek.beast.TestMessage")
	proto.RegisterMapType((map[string]string)(nil), "com.gojek.beast.TestMessage.CurrentStateEntry")
	proto.RegisterType((*TestNestedMessage)(nil), "com.gojek.beast.TestNestedMessage")
	proto.RegisterType((*TestNestedRepeatedMessage)(nil), "com.gojek.beast.TestNestedRepeatedMessage")
}

func init() { proto.RegisterFile("src/test/proto/TestMessage.proto", fileDescriptor_3a001fe4bd651cd8) }

var fileDescriptor_3a001fe4bd651cd8 = []byte{
	// 653 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0x4d, 0x6f, 0xda, 0x4a,
	0x14, 0x7d, 0x86, 0x40, 0xf0, 0x05, 0x12, 0x32, 0xef, 0x3d, 0x65, 0x42, 0xf2, 0x5e, 0x1d, 0x2a,
	0x55, 0x56, 0x17, 0xb6, 0x44, 0x17, 0xfd, 0x58, 0xb4, 0x4a, 0x80, 0x46, 0x51, 0x13, 0x1a, 0x4d,
	0xe8, 0xa6, 0x1b, 0xcb, 0xd8, 0x37, 0xd4, 0x8d, 0xb1, 0xad, 0x99, 0x71, 0xa5, 0xec, 0xfa, 0x9b,
	0xfb, 0x0b, 0x2a, 0xcf, 0xd8, 0x09, 0x05, 0xa9, 0x55, 0xd5, 0x15, 0xdc, 0x73, 0xcf, 0x3d, 0xf7,
	0x43, 0x67, 0x0c, 0x96, 0xe0, 0x81, 0x2b, 0x51, 0x48, 0x37, 0xe3, 0xa9, 0x4c, 0xdd, 0x19, 0x0a,
	0x79, 0x89, 0x42, 0xf8, 0x0b, 0x74, 0x14, 0x42, 0x76, 0x83, 0x74, 0xe9, 0x2c, 0xd2, 0xcf, 0x78,
	0xeb, 0xcc, 0xd1, 0x17, 0xb2, 0xff, 0x68, 0x91, 0xa6, 0x8b, 0x18, 0x75, 0xc1, 0x3c, 0xbf, 0x71,
	0x65, 0xb4, 0x44, 0x21, 0xfd, 0x65, 0xa6, 0x2b, 0xfa, 0xff, 0xaf, 0x13, 0xc2, 0x9c, 0xfb, 0x32,
	0x4a, 0x93, 0x32, 0x7f, 0xb4, 0x9e, 0x17, 0x92, 0xe7, 0x81, 0xd4, 0xd9, 0xc1, 0x39, 0x6c, 0x17,
	0x43, 0xbc, 0xc3, 0x3b, 0x72, 0x0c, 0x9d, 0x94, 0x87, 0xc8, 0xbd, 0x24, 0x5f, 0xce, 0x91, 0x53,
	0xc3, 0x32, 0x6c, 0x93, 0xb5, 0x15, 0x36, 0x55, 0x10, 0x39, 0x04, 0x53, 0x53, 0x72, 0x1e, 0xd3,
	0x9a, 0xca, 0xb7, 0x14, 0xf0, 0x81, 0xc7, 0x83, 0x6f, 0x5b, 0xd0, 0x5e, 0x59, 0xe8, 0x4f, 0xf5,
	0xc8, 0x63, 0xe8, 0xea, 0x64, 0x88, 0xd2, 0x8f, 0x62, 0x41, 0xeb, 0x8a, 0xa0, 0x45, 0xc7, 0x1a,
	0x23, 0x2f, 0x01, 0x02, 0x8e, 0xbe, 0xc4, 0xd0, 0xf3, 0x25, 0xdd, 0xb2, 0x0c, 0xbb, 0x3d, 0xec,
	0x3b, 0x7a, 0x65, 0xa7, 0x5a, 0xd9, 0x99, 0x55, 0x37, 0x63, 0x66, 0xc9, 0x3e, 0x91, 0xc4, 0x85,
	0xa6, 0x90, 0xbe, 0xcc, 0x05, 0x6d, 0x58, 0x86, 0xbd, 0x33, 0xdc, 0x77, 0xd6, 0x6e, 0xef, 0x5c,
	0xab, 0x34, 0x2b, 0x69, 0xa4, 0x0f, 0xad, 0x30, 0x12, 0x41, 0x9a, 0x27, 0x92, 0x36, 0x2d, 0xc3,
	0xae, 0xb3, 0xfb, 0x98, 0x50, 0xd8, 0x16, 0x79, 0x10, 0xa0, 0x10, 0x74, 0xdb, 0x32, 0xec, 0x16,
	0xab, 0x42, 0xf2, 0x0f, 0x34, 0x32, 0x1e, 0x05, 0x48, 0x5b, 0x96, 0x61, 0xd7, 0x98, 0x0e, 0xc8,
	0x35, 0x74, 0x83, 0x9c, 0x73, 0x4c, 0xa4, 0x57, 0xa8, 0x23, 0x35, 0xad, 0xba, 0xdd, 0x1e, 0x3a,
	0x1b, 0x33, 0xac, 0x5a, 0x64, 0xa4, 0x2b, 0x8a, 0xb1, 0x70, 0x92, 0x48, 0x7e, 0xc7, 0x3a, 0xc1,
	0x0a, 0x44, 0xfe, 0x03, 0xc8, 0x05, 0x72, 0x4f, 0xa6, 0xb7, 0x98, 0x50, 0xb0, 0x0c, 0xbb, 0xc3,
	0xcc, 0x02, 0x99, 0x15, 0x00, 0x79, 0x0d, 0x5d, 0xc9, 0xa3, 0xcc, 0xab, 0x0c, 0x42, 0xdb, 0xea,
	0x5c, 0x07, 0x1b, 0xe7, 0x1a, 0x97, 0x04, 0xd6, 0x29, 0xf8, 0x55, 0x54, 0xec, 0xe8, 0xc7, 0x91,
	0x2f, 0x50, 0xd0, 0x8e, 0x55, 0xb7, 0x4d, 0x56, 0x85, 0xe4, 0x39, 0x40, 0xc6, 0xd3, 0x0c, 0xb9,
	0x8c, 0x50, 0xd0, 0xae, 0x92, 0xdd, 0xdf, 0x90, 0xbd, 0x56, 0xc6, 0x63, 0x2b, 0xd4, 0xfe, 0x1b,
	0xd8, 0xdb, 0x58, 0x8a, 0xf4, 0xa0, 0x7e, 0x8b, 0x77, 0xa5, 0x5f, 0x8a, 0xbf, 0xc5, 0x0d, 0xbf,
	0xf8, 0x71, 0x8e, 0xa5, 0x47, 0x74, 0xf0, 0xaa, 0xf6, 0xc2, 0x18, 0xe4, 0xb0, 0x57, 0x5c, 0x68,
	0x8a, 0x42, 0x62, 0x58, 0x39, 0xef, 0x10, 0xcc, 0x44, 0x01, 0x5e, 0x14, 0x96, 0x32, 0x2d, 0x0d,
	0x9c, 0x87, 0x64, 0x04, 0x3b, 0x22, 0x4a, 0x16, 0x31, 0x7a, 0x4b, 0x4d, 0x57, 0xa2, 0xed, 0xe1,
	0xd1, 0xcf, 0x4e, 0xcf, 0xba, 0xba, 0xa6, 0x0c, 0x07, 0x5f, 0x6b, 0x70, 0xf0, 0xd0, 0x97, 0x61,
	0xa6, 0x4c, 0x55, 0xf5, 0xdf, 0x6c, 0x61, 0xfc, 0x76, 0x0b, 0x72, 0x06, 0x3d, 0x5e, 0xea, 0xae,
	0x4c, 0x5a, 0xff, 0xa5, 0xcc, 0x2e, 0x5f, 0x9b, 0xe6, 0x18, 0x3a, 0xfa, 0x05, 0x7a, 0x37, 0x11,
	0xc6, 0xa1, 0x7a, 0x46, 0x0d, 0xd6, 0xd6, 0xd8, 0xdb, 0x02, 0x22, 0x43, 0xf8, 0xf7, 0xbe, 0xd7,
	0x0f, 0xdc, 0x2d, 0xab, 0x6e, 0x37, 0xd8, 0xdf, 0x55, 0x72, 0xfa, 0x50, 0xf3, 0xf4, 0x09, 0x34,
	0xf5, 0xfb, 0x20, 0x5d, 0x30, 0x47, 0xef, 0x2f, 0xaf, 0x2e, 0x26, 0xb3, 0xc9, 0xb8, 0xf7, 0x97,
	0x0a, 0x4f, 0xa6, 0xa3, 0xc9, 0xc5, 0xc5, 0x64, 0xdc, 0x33, 0x4e, 0xcf, 0x60, 0xfd, 0x9b, 0x76,
	0xda, 0x5b, 0x99, 0xf7, 0xaa, 0x70, 0xc7, 0x95, 0xf1, 0xd1, 0x5a, 0x44, 0xf2, 0x53, 0x3e, 0x2f,
	0x56, 0x73, 0x15, 0xf7, 0xc6, 0xe7, 0x4b, 0x57, 0xf1, 0xcb, 0x4f, 0x57, 0x53, 0xfd, 0x3c, 0xfb,
	0x1e, 0x00, 0x00, 0xff, 0xff, 0x90, 0xb7, 0xba, 0xc9, 0x45, 0x05, 0x00, 0x00,
}
